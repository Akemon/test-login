<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans         http://www.springframework.org/schema/beans/spring-beans-4.0.xsd        http://www.springframework.org/schema/aop         http://www.springframework.org/schema/aop/spring-aop-4.0.xsd        http://www.springframework.org/schema/context         http://www.springframework.org/schema/context/spring-context-4.0.xsd        http://www.springframework.org/schema/tx         http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd">
	<context:annotation-config />
	<context:component-scan base-package="com.szy.test.login" />


<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
	destroy-method="close">
	<property name="driverClassName" value="com.mysql.jdbc.Driver" />
	<property name="url" value="jdbc:mysql://127.0.0.1:3306/test_login" />
	<property name="username" value="root" />
	<property name="password" value="" />
	<!-- 是否对已备语句进行池管理（布尔值），是否对PreparedStatement进行缓存 -->
	<property name="poolPreparedStatements" value="true" />
	<!-- 是否对sql进行自动提交 -->
	<property name="defaultAutoCommit" value="true" />
</bean>
	
	<!--  
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/test_login" />
		<property name="username" value="root" />
		<property name="password" value="" />
		<property name="maxActive" value="10" />
		<property name="initialSize" value="1" />
		<property name="maxWait" value="60000" />
		<property name="minIdle" value="1" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="50" />
		<property name="maxOpenPreparedStatements" value="100" />
		<property name="proxyFilters">
			<list>
				<ref bean="statFilter" />
				<ref bean="logFilter" />
			</list>
		</property>
	</bean>
`-->


	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		lazy-init="false">

		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.cache.use_second_level_cache">
					false
				</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<!-- hibernate4 -->
				<!-- <prop key="hibernate.cache.provider_class"> -->
				<!-- org.hibernate.cache.spi.RegionFactory -->
				<!-- </prop> -->

				<!-- hibernate5 org.hibernate.cache.ehcache.EhCacheRegionFactory -->
				<prop key="hibernate.cache.region.factory_class">
					org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
				</prop>

				<prop key="hibernate.jdbc.batch_size">300</prop>
				<!-- update false -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>

			</props>
		</property>

		<property name="packagesToScan">
			<list>
				<value>com.szy.test.login.entity</value>
			</list>
		</property>



	</bean>


	<bean id="statFilter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
		<property name="statementExecutableSqlLogEnable" value="false" />
		<property name="dataSourceLogEnabled" value="false" />
	</bean>
	<bean id="logFilter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="slowSqlMillis" value="50" />
		<property name="logSlowSql" value="false" />
		<property name="mergeSql" value="true" />
	</bean>



	<!--整合spring与mybatis -->

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis.xml"></property>
		<property name="typeAliasesPackage" value="com.szy.jxcp.entity"></property>
		<property name="mapperLocations" value="classpath*:/src/main/resources/mybatis/*.xml"></property>
	</bean>
	
       <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
                <!--com.dao是mapper类所在的包-->
                <property name="basePackage" value="com.szy.test.login.dao"/>
                <!--下面这个省略掉的话也不会出错，建议保留它-->
                <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
	 </bean>





	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />



	


</beans>
